import numpy as np
import random
import operator

def premier_pop(Mot_secret,N):
    population=[]
    for n_ind in range(N):
        individu=''
        for let in range(len(Mot_secret)):
            individu += chr(97 + int(26 * random.random()))
        population.append(individu)
    return population
        
def fitness(population,Mot_secret,M):
    fit_ind=[]
    for ind in population:
        bonne_lettre=0
        for i in range(len(Mot_secret)):
            if ind[i]==Mot_secret[i]:
                bonne_lettre+=1
        fit=bonne_lettre/len(Mot_secret)
        fit_ind.append([ind,fit])
    fit_ind.sort(key = operator.itemgetter(1))
    nouv_pop=np.array(fit_ind)[M:,0]
    return(nouv_pop,fit_ind[len(fit_ind)-1][1])
    
def breed(population,Mot_secret,M):
    random.shuffle(population)
    pop1=population[:int(M/2)]
    pop2=population[int(M/2):]    
    nouv_pop=[]
    for i in range(int(M/2)):
        mot1=pop1[i]
        mot2=pop2[i]
        for cmpt in range(4):
            nouv_mot=''
            for j in range(len(Mot_secret)):
                ind=random.random()
                if ind<0.5:
                    nouv_mot+=mot1[j]
                if ind> 0.5:
                   nouv_mot+=mot2[j]
            nouv_pop.append(nouv_mot)
    return nouv_pop
    
def mutation(population,Mot_secret,coeff_mut):
    nouv_pop=[]
    for ind in population:
        r=random.random()
        if r<coeff_mut:
            let=int(random.random() * len(Mot_secret))
            nouv_ind=change(ind,let,chr(97 + int(26 * random.random())))
            nouv_pop.append(nouv_ind)
        else:
            nouv_pop.append(ind)
    return nouv_pop
        
def change(mot,ind,lettre):
    n=len(mot)
    liste_mot=[]
    for i in range(n):
        liste_mot.append(mot[i])
    liste_mot[ind]=lettre
    nouv_mot=''
    for i in range(n):
        nouv_mot+=liste_mot[i]
    return nouv_mot
        
def algo(Mot_secret,N,tol=0.9,coeff_mut=0.5,M_gen=1000):
    M=int(N/2)
    Gen=0
    pr_pop=premier_pop(Mot_secret,N)
    pop_int, fit =fitness(pr_pop,Mot_secret,M)
    pop_int = breed(pop_int,Mot_secret,M)
    pop_int = mutation(pop_int,Mot_secret,coeff_mut)
    r_ind = [int(N*random.random()) for i in range(2)]
    echantillon= [pop_int[r] for r in r_ind]
    print(str(echantillon) + '   Generation  : ' + str(Gen))
    while Gen<M_gen:
        Gen+=1
        pop_int, fit =fitness(pop_int,Mot_secret,M)
        if fit>=tol:
            break
        pop_int = breed(pop_int,Mot_secret,M)
        pop_int = mutation(pop_int,Mot_secret,coeff_mut)
        r_ind = [int(N*random.random()) for i in range(2)]
        echantillon= [pop_int[r] for r in r_ind]
        print(str(echantillon) + '   Generation  : ' + str(Gen))
    if fit>=tol:
        print('\nPrécision atteinte :' + str(tol) + "\nMot final = "+ pop_int[M-1] + "\nfitness = " + str(fit) )
    else:
        print('précision non atteinte')
